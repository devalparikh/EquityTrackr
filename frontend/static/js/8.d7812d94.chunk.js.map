{"version":3,"sources":["utils/demo/positionsData.js","utils/textFormat.js","components/Table/PositionsTable.js","pages/Dashboard.js","components/Typography/PageTitle.js","components/Typography/SectionTitle.js","components/Cards/InfoCard.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","components/RoundIcon.js","utils/demo/chartsData.js"],"names":["avatar","name","job","amount","openPL","monthPL","status","date","currencyFormat","num","formattedNum","toFixed","replace","PositionsTable","columns","data","className","SectionTitle","length","map","column","position","i","key","src","alt","Dashboard","useState","page","positions","setPositions","userData","setUserData","useEffect","axios","get","then","response","catch","err","console","log","balance","email","slice","PageTitle","InfoCard","title","value","RoundIcon","icon","MoneyIcon","iconColorClass","bgColorClass","ChartsIcon","ChartCard","lineOptions","ChartLegend","legends","lineLegends","doughnutOptions","doughnutLegends","children","Chart","legend","color","Icon","cls","classNames","barLegends","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","barOptions","borderWidth"],"mappings":"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","file":"static/js/8.d7812d94.chunk.js","sourcesContent":["export default [\n  {\n    avatar:\n      \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n    name: \"Hilton Inn\",\n    job: \"Washington, DC\",\n    amount: 103212,\n    openPL: 35000,\n    monthPL: 2200,\n    status: \"primary\",\n    date: \"Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar:\n      \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n    name: \"Aloft\",\n    job: \"New York City, NY\",\n    amount: 231041,\n    openPL: 85000,\n    monthPL: 4200,\n    status: \"danger\",\n    date: \"Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar:\n      \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n    name: \"Ritz-Carlton\",\n    job: \"Miami, FL\",\n    amount: 121934.24,\n    openPL: 29000,\n    monthPL: 3200,\n    status: \"success\",\n    date: \"Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar:\n      \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n    name: \"SpaceX\",\n    job: \"EquityZen\",\n    amount: 41232.4,\n    openPL: -25000,\n    monthPL: -1200,\n    status: \"primary\",\n    date: \"Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)\",\n  },\n];\n","export function currencyFormat(num) {\n  let formattedNum;\n\n  formattedNum = \"$\" + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  if (num < 0) {\n    formattedNum = \"-\" + formattedNum.replace(\"-\", \"\");\n  }\n  return formattedNum;\n}\n","import React from \"react\";\n\nimport {\n  TableBody,\n  TableFooter,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  Avatar,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport SectionTitle from \"../Typography/SectionTitle\";\nimport { currencyFormat } from \"../../utils/textFormat\";\n\nfunction PositionsTable({ columns, data }) {\n  return (\n    <div className=\"mb-10\">\n      <SectionTitle>My Positions (x{data.length})</SectionTitle>\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              {columns.map((column) => {\n                return <TableCell>{column}</TableCell>;\n              })}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((position, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={position.avatar}\n                      alt=\"position image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{position.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                        {position.job}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex flex-col text-right text-sm\">\n                    <p className=\"font-semibold\">\n                      {currencyFormat(position.amount)}\n                    </p>\n                    <p className=\"text-xs\">{currencyFormat(position.openPL)}</p>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\nexport default PositionsTable;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { MoneyIcon, ChartsIcon } from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport response from \"../utils/demo/positionsData\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from \"../utils/demo/chartsData\";\nimport { currencyFormat } from \"../utils/textFormat\";\nimport PositionsTable from \"../components/Table/PositionsTable\";\n\nfunction Dashboard() {\n  const [page, setPage] = useState(1);\n  const [positions, setPositions] = useState([]);\n  const [userData, setUserData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/v1/investor?name=Deval\")\n      .then((response) => {\n        setUserData(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setUserData({\n          balance: 404690,\n          email: \"mock@gmail.com\",\n          name: \"Mock\",\n        });\n      });\n  }, []);\n\n  const resultsPerPage = 4;\n\n  useEffect(() => {\n    setPositions(\n      response.slice((page - 1) * resultsPerPage, page * resultsPerPage)\n    );\n  }, [page]);\n\n  return userData.name ? (\n    <>\n      <PageTitle>Weclome, {userData.name}</PageTitle>\n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard\n          title=\"Investment Value\"\n          value={currencyFormat(userData.balance)}\n        >\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Total investments\" value={positions.length}>\n          <RoundIcon\n            icon={ChartsIcon}\n            iconColorClass=\"text-purple-500 dark:text-purple-100\"\n            bgColorClass=\"bg-purple-100 dark:bg-purple-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Total P/L\" value=\"+$26,360.89 (+17.87%)\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Month P/L\" value=\"+$2,260.89 (+1.68%)\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Value\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n        <ChartCard title=\"Allocation\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n      </div>\n\n      <PositionsTable data={positions} columns={[\"Name\", \"Marekt Value\"]} />\n    </>\n  ) : (\n    <></>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export const doughnutLegends = [\n  { title: \"Hotels\", color: \"bg-blue-500\" },\n  { title: \"Restuarant\", color: \"bg-teal-600\" },\n  { title: \"Commercial\", color: \"bg-purple-600\" },\n];\n\nexport const lineLegends = [\n  { title: \"Revenue\", color: \"bg-teal-600\" },\n  { title: \"Profit\", color: \"bg-purple-600\" },\n];\n\nexport const barLegends = [\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [66, 23, 13],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\n        label: \"Dataset 1\",\n      },\n    ],\n    labels: [\"Hotels\", \"Restuarant\", \"Commercial\"],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const lineOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Revenue\",\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#0694a2\",\n        borderColor: \"#0694a2\",\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: \"Profit\",\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#7e3af2\",\n        borderColor: \"#7e3af2\",\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Month\",\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Value\",\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const barOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Shoes\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: \"Bags\",\n        backgroundColor: \"#7e3af2\",\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n"],"sourceRoot":""}